-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from Grammar/Par.y
-----------------------------------------------------------------------------


rule 37 is unused
rule 38 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg_internal -> Prog                      (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Prog -> ListTopDefVar ListTopDef 'Main' '{' Blok '}'   (4)
	TopDefVar -> 'create' '(' Type Ident ')' ';'       (5)
	ListTopDefVar ->                                   (6)
	ListTopDefVar -> TopDefVar ListTopDefVar           (7)
	TopDef -> Type Ident '(' ListArg ')' '{' Blok '}'   (8)
	ListTopDef ->                                      (9)
	ListTopDef -> TopDef ListTopDef                    (10)
	Arg -> Type Ident                                  (11)
	Arg -> '&' Type Ident                              (12)
	ListArg ->                                         (13)
	ListArg -> Arg                                     (14)
	ListArg -> Arg ',' ListArg                         (15)
	Blok -> ListStmt                                   (16)
	ListStmt ->                                        (17)
	ListStmt -> Stmt ListStmt                          (18)
	Stmt -> ';'                                        (19)
	Stmt -> 'create' '(' Type Ident ')' ';'            (20)
	Stmt -> Type Ident '=' Expr ';'                    (21)
	Stmt -> Type Ident '++' ';'                        (22)
	Stmt -> Type Ident '--' ';'                        (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'return' ';'                               (25)
	Stmt -> 'if' Expr 'then' ListStmt 'endif'          (26)
	Stmt -> 'if' Expr 'then' ListStmt 'else' ListStmt 'endif'   (27)
	Stmt -> 'while' Expr 'then' ListStmt 'endwhile'    (28)
	Stmt -> Expr ';'                                   (29)
	Stmt -> 'continue' ';'                             (30)
	Stmt -> 'break' ';'                                (31)
	Stmt -> 'print' '(' Expr ')' ';'                   (32)
	Type -> '$'                                        (33)
	Type -> '#'                                        (34)
	Type -> '\''                                       (35)
	Type -> '@'                                        (36)
	ListType -> Type                                   (37)
	ListType -> Type ',' ListType                      (38)
	Expr6 -> Type Ident                                (39)
	Expr6 -> Integer                                   (40)
	Expr6 -> 'True'                                    (41)
	Expr6 -> 'False'                                   (42)
	Expr6 -> Type Ident '(' ListExpr ')'               (43)
	Expr6 -> String                                    (44)
	Expr6 -> '(' Expr ')'                              (45)
	Expr5 -> '-' Expr6                                 (46)
	Expr5 -> '!' Expr6                                 (47)
	Expr5 -> Expr6                                     (48)
	Expr4 -> Expr4 MulOp Expr5                         (49)
	Expr4 -> Expr5                                     (50)
	Expr3 -> Expr3 AddOp Expr4                         (51)
	Expr3 -> Expr4                                     (52)
	Expr2 -> Expr2 RelOp Expr3                         (53)
	Expr2 -> Expr3                                     (54)
	Expr1 -> Expr2 '&&' Expr1                          (55)
	Expr1 -> Expr2                                     (56)
	Expr -> Expr1 '||' Expr                            (57)
	Expr -> Expr1                                      (58)
	ListExpr ->                                        (59)
	ListExpr -> Expr                                   (60)
	ListExpr -> Expr ',' ListExpr                      (61)
	AddOp -> '+'                                       (62)
	AddOp -> '-'                                       (63)
	MulOp -> '*'                                       (64)
	MulOp -> '/'                                       (65)
	MulOp -> '%'                                       (66)
	RelOp -> '<'                                       (67)
	RelOp -> '<='                                      (68)
	RelOp -> '>'                                       (69)
	RelOp -> '>='                                      (70)
	RelOp -> '=='                                      (71)
	RelOp -> '!='                                      (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'#'            { PT _ (TS _ 3) }
	'$'            { PT _ (TS _ 4) }
	'%'            { PT _ (TS _ 5) }
	'&'            { PT _ (TS _ 6) }
	'&&'           { PT _ (TS _ 7) }
	'\''           { PT _ (TS _ 8) }
	'('            { PT _ (TS _ 9) }
	')'            { PT _ (TS _ 10) }
	'*'            { PT _ (TS _ 11) }
	'+'            { PT _ (TS _ 12) }
	'++'           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'/'            { PT _ (TS _ 17) }
	';'            { PT _ (TS _ 18) }
	'<'            { PT _ (TS _ 19) }
	'<='           { PT _ (TS _ 20) }
	'='            { PT _ (TS _ 21) }
	'=='           { PT _ (TS _ 22) }
	'>'            { PT _ (TS _ 23) }
	'>='           { PT _ (TS _ 24) }
	'@'            { PT _ (TS _ 25) }
	'False'        { PT _ (TS _ 26) }
	'Main'         { PT _ (TS _ 27) }
	'True'         { PT _ (TS _ 28) }
	'break'        { PT _ (TS _ 29) }
	'continue'     { PT _ (TS _ 30) }
	'create'       { PT _ (TS _ 31) }
	'else'         { PT _ (TS _ 32) }
	'endif'        { PT _ (TS _ 33) }
	'endwhile'     { PT _ (TS _ 34) }
	'if'           { PT _ (TS _ 35) }
	'print'        { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'then'         { PT _ (TS _ 38) }
	'while'        { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'||'           { PT _ (TS _ 41) }
	'}'            { PT _ (TS _ 42) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Prog            rule  4
	TopDefVar       rule  5
	ListTopDefVar   rules 6, 7
	TopDef          rule  8
	ListTopDef      rules 9, 10
	Arg             rules 11, 12
	ListArg         rules 13, 14, 15
	Blok            rule  16
	ListStmt        rules 17, 18
	Stmt            rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	Type            rules 33, 34, 35, 36
	ListType        rules 37, 38
	Expr6           rules 39, 40, 41, 42, 43, 44, 45
	Expr5           rules 46, 47, 48
	Expr4           rules 49, 50
	Expr3           rules 51, 52
	Expr2           rules 53, 54
	Expr1           rules 55, 56
	Expr            rules 57, 58
	ListExpr        rules 59, 60, 61
	AddOp           rules 62, 63
	MulOp           rules 64, 65, 66
	RelOp           rules 67, 68, 69, 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'#'            reduce using rule 6
	'$'            reduce using rule 6
	'\''           reduce using rule 6
	'@'            reduce using rule 6
	'Main'         reduce using rule 6
	'create'       shift, and enter state 6

	Prog           goto state 3
	TopDefVar      goto state 4
	ListTopDefVar  goto state 5

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'then'         reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProg_internal -> Prog .                     (rule 0)

	%eof           accept


State 4

	ListTopDefVar -> TopDefVar . ListTopDefVar          (rule 7)

	'#'            reduce using rule 6
	'$'            reduce using rule 6
	'\''           reduce using rule 6
	'@'            reduce using rule 6
	'Main'         reduce using rule 6
	'create'       shift, and enter state 6

	TopDefVar      goto state 4
	ListTopDefVar  goto state 15

State 5

	Prog -> ListTopDefVar . ListTopDef 'Main' '{' Blok '}'    (rule 4)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'@'            shift, and enter state 14
	'Main'         reduce using rule 9

	TopDef         goto state 8
	ListTopDef     goto state 9
	Type           goto state 10

State 6

	TopDefVar -> 'create' . '(' Type Ident ')' ';'      (rule 5)

	'('            shift, and enter state 7


State 7

	TopDefVar -> 'create' '(' . Type Ident ')' ';'      (rule 5)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'@'            shift, and enter state 14

	Type           goto state 19

State 8

	ListTopDef -> TopDef . ListTopDef                   (rule 10)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'@'            shift, and enter state 14
	'Main'         reduce using rule 9

	TopDef         goto state 8
	ListTopDef     goto state 18
	Type           goto state 10

State 9

	Prog -> ListTopDefVar ListTopDef . 'Main' '{' Blok '}'    (rule 4)

	'Main'         shift, and enter state 17


State 10

	TopDef -> Type . Ident '(' ListArg ')' '{' Blok '}'    (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 11

	Type -> '#' .                                       (rule 34)

	L_Ident        reduce using rule 34


State 12

	Type -> '$' .                                       (rule 33)

	L_Ident        reduce using rule 33


State 13

	Type -> '\'' .                                      (rule 35)

	L_Ident        reduce using rule 35


State 14

	Type -> '@' .                                       (rule 36)

	L_Ident        reduce using rule 36


State 15

	ListTopDefVar -> TopDefVar ListTopDefVar .          (rule 7)

	'#'            reduce using rule 7
	'$'            reduce using rule 7
	'\''           reduce using rule 7
	'@'            reduce using rule 7
	'Main'         reduce using rule 7


State 16

	TopDef -> Type Ident . '(' ListArg ')' '{' Blok '}'    (rule 8)

	'('            shift, and enter state 22


State 17

	Prog -> ListTopDefVar ListTopDef 'Main' . '{' Blok '}'    (rule 4)

	'{'            shift, and enter state 21


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 10)

	'Main'         reduce using rule 10


State 19

	TopDefVar -> 'create' '(' Type . Ident ')' ';'      (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 20

	TopDefVar -> 'create' '(' Type Ident . ')' ';'      (rule 5)

	')'            shift, and enter state 55


State 21

	Prog -> ListTopDefVar ListTopDef 'Main' '{' . Blok '}'    (rule 4)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'create'       shift, and enter state 48
	'if'           shift, and enter state 49
	'print'        shift, and enter state 50
	'return'       shift, and enter state 51
	'while'        shift, and enter state 52
	'}'            reduce using rule 17
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Blok           goto state 29
	ListStmt       goto state 30
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 22

	TopDef -> Type Ident '(' . ListArg ')' '{' Blok '}'    (rule 8)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'&'            shift, and enter state 26
	'\''           shift, and enter state 13
	')'            reduce using rule 13
	'@'            shift, and enter state 14

	Arg            goto state 23
	ListArg        goto state 24
	Type           goto state 25

State 23

	ListArg -> Arg .                                    (rule 14)
	ListArg -> Arg . ',' ListArg                        (rule 15)

	')'            reduce using rule 14
	','            shift, and enter state 92


State 24

	TopDef -> Type Ident '(' ListArg . ')' '{' Blok '}'    (rule 8)

	')'            shift, and enter state 91


State 25

	Arg -> Type . Ident                                 (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 90

State 26

	Arg -> '&' . Type Ident                             (rule 12)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'@'            shift, and enter state 14

	Type           goto state 89

State 27

	Expr6 -> Integer .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'then'         reduce using rule 40
	'||'           reduce using rule 40


State 28

	Expr6 -> String .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'then'         reduce using rule 44
	'||'           reduce using rule 44


State 29

	Prog -> ListTopDefVar ListTopDef 'Main' '{' Blok . '}'    (rule 4)

	'}'            shift, and enter state 88


State 30

	Blok -> ListStmt .                                  (rule 16)

	'}'            reduce using rule 16


State 31

	ListStmt -> Stmt . ListStmt                         (rule 18)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'create'       shift, and enter state 48
	'else'         reduce using rule 17
	'endif'        reduce using rule 17
	'endwhile'     reduce using rule 17
	'if'           shift, and enter state 49
	'print'        shift, and enter state 50
	'return'       shift, and enter state 51
	'while'        shift, and enter state 52
	'}'            reduce using rule 17
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 87
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 32

	Stmt -> Type . Ident '=' Expr ';'                   (rule 21)
	Stmt -> Type . Ident '++' ';'                       (rule 22)
	Stmt -> Type . Ident '--' ';'                       (rule 23)
	Expr6 -> Type . Ident                               (rule 39)
	Expr6 -> Type . Ident '(' ListExpr ')'              (rule 43)

	L_Ident        shift, and enter state 2

	Ident          goto state 86

State 33

	Expr5 -> Expr6 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'then'         reduce using rule 48
	'||'           reduce using rule 48


State 34

	Expr4 -> Expr5 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'then'         reduce using rule 50
	'||'           reduce using rule 50


State 35

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr4 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 83
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 84
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 85
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'then'         reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 82

State 36

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr3 .                                    (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 80
	','            reduce using rule 54
	'-'            shift, and enter state 81
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'then'         reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 79

State 37

	Expr2 -> Expr2 . RelOp Expr3                        (rule 53)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 55)
	Expr1 -> Expr2 .                                    (rule 56)

	'!='           shift, and enter state 72
	'&&'           shift, and enter state 73
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'<'            shift, and enter state 74
	'<='           shift, and enter state 75
	'=='           shift, and enter state 76
	'>'            shift, and enter state 77
	'>='           shift, and enter state 78
	'then'         reduce using rule 56
	'||'           reduce using rule 56

	RelOp          goto state 71

State 38

	Expr -> Expr1 . '||' Expr                           (rule 57)
	Expr -> Expr1 .                                     (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'then'         reduce using rule 58
	'||'           shift, and enter state 70


State 39

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 69


State 40

	Expr5 -> '!' . Expr6                                (rule 47)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 68

State 41

	Expr6 -> '(' . Expr ')'                             (rule 45)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 67

State 42

	Expr5 -> '-' . Expr6                                (rule 46)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 66

State 43

	Stmt -> ';' .                                       (rule 19)

	'!'            reduce using rule 19
	'#'            reduce using rule 19
	'$'            reduce using rule 19
	'\''           reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'@'            reduce using rule 19
	'False'        reduce using rule 19
	'True'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'create'       reduce using rule 19
	'else'         reduce using rule 19
	'endif'        reduce using rule 19
	'endwhile'     reduce using rule 19
	'if'           reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'while'        reduce using rule 19
	'}'            reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 44

	Expr6 -> 'False' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'then'         reduce using rule 42
	'||'           reduce using rule 42


State 45

	Expr6 -> 'True' .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'then'         reduce using rule 41
	'||'           reduce using rule 41


State 46

	Stmt -> 'break' . ';'                               (rule 31)

	';'            shift, and enter state 65


State 47

	Stmt -> 'continue' . ';'                            (rule 30)

	';'            shift, and enter state 64


State 48

	Stmt -> 'create' . '(' Type Ident ')' ';'           (rule 20)

	'('            shift, and enter state 63


State 49

	Stmt -> 'if' . Expr 'then' ListStmt 'endif'         (rule 26)
	Stmt -> 'if' . Expr 'then' ListStmt 'else' ListStmt 'endif'    (rule 27)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 62

State 50

	Stmt -> 'print' . '(' Expr ')' ';'                  (rule 32)

	'('            shift, and enter state 61


State 51

	Stmt -> 'return' . Expr ';'                         (rule 24)
	Stmt -> 'return' . ';'                              (rule 25)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 60
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 59

State 52

	Stmt -> 'while' . Expr 'then' ListStmt 'endwhile'    (rule 28)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 58

State 53

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'then'         reduce using rule 2
	'||'           reduce using rule 2


State 54

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'then'         reduce using rule 3
	'||'           reduce using rule 3


State 55

	TopDefVar -> 'create' '(' Type Ident ')' . ';'      (rule 5)

	';'            shift, and enter state 56


State 56

	TopDefVar -> 'create' '(' Type Ident ')' ';' .      (rule 5)

	'#'            reduce using rule 5
	'$'            reduce using rule 5
	'\''           reduce using rule 5
	'@'            reduce using rule 5
	'Main'         reduce using rule 5
	'create'       reduce using rule 5


State 57

	Expr6 -> Type . Ident                               (rule 39)
	Expr6 -> Type . Ident '(' ListExpr ')'              (rule 43)

	L_Ident        shift, and enter state 2

	Ident          goto state 111

State 58

	Stmt -> 'while' Expr . 'then' ListStmt 'endwhile'    (rule 28)

	'then'         shift, and enter state 110


State 59

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 109


State 60

	Stmt -> 'return' ';' .                              (rule 25)

	'!'            reduce using rule 25
	'#'            reduce using rule 25
	'$'            reduce using rule 25
	'\''           reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'@'            reduce using rule 25
	'False'        reduce using rule 25
	'True'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'create'       reduce using rule 25
	'else'         reduce using rule 25
	'endif'        reduce using rule 25
	'endwhile'     reduce using rule 25
	'if'           reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'while'        reduce using rule 25
	'}'            reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 61

	Stmt -> 'print' '(' . Expr ')' ';'                  (rule 32)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 108

State 62

	Stmt -> 'if' Expr . 'then' ListStmt 'endif'         (rule 26)
	Stmt -> 'if' Expr . 'then' ListStmt 'else' ListStmt 'endif'    (rule 27)

	'then'         shift, and enter state 107


State 63

	Stmt -> 'create' '(' . Type Ident ')' ';'           (rule 20)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'@'            shift, and enter state 14

	Type           goto state 106

State 64

	Stmt -> 'continue' ';' .                            (rule 30)

	'!'            reduce using rule 30
	'#'            reduce using rule 30
	'$'            reduce using rule 30
	'\''           reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'@'            reduce using rule 30
	'False'        reduce using rule 30
	'True'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'create'       reduce using rule 30
	'else'         reduce using rule 30
	'endif'        reduce using rule 30
	'endwhile'     reduce using rule 30
	'if'           reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'while'        reduce using rule 30
	'}'            reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 65

	Stmt -> 'break' ';' .                               (rule 31)

	'!'            reduce using rule 31
	'#'            reduce using rule 31
	'$'            reduce using rule 31
	'\''           reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'@'            reduce using rule 31
	'False'        reduce using rule 31
	'True'         reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'create'       reduce using rule 31
	'else'         reduce using rule 31
	'endif'        reduce using rule 31
	'endwhile'     reduce using rule 31
	'if'           reduce using rule 31
	'print'        reduce using rule 31
	'return'       reduce using rule 31
	'while'        reduce using rule 31
	'}'            reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 66

	Expr5 -> '-' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'then'         reduce using rule 46
	'||'           reduce using rule 46


State 67

	Expr6 -> '(' Expr . ')'                             (rule 45)

	')'            shift, and enter state 105


State 68

	Expr5 -> '!' Expr6 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'then'         reduce using rule 47
	'||'           reduce using rule 47


State 69

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'#'            reduce using rule 29
	'$'            reduce using rule 29
	'\''           reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'@'            reduce using rule 29
	'False'        reduce using rule 29
	'True'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'create'       reduce using rule 29
	'else'         reduce using rule 29
	'endif'        reduce using rule 29
	'endwhile'     reduce using rule 29
	'if'           reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'while'        reduce using rule 29
	'}'            reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 70

	Expr -> Expr1 '||' . Expr                           (rule 57)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 104

State 71

	Expr2 -> Expr2 RelOp . Expr3                        (rule 53)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 103

State 72

	RelOp -> '!=' .                                     (rule 72)

	'!'            reduce using rule 72
	'#'            reduce using rule 72
	'$'            reduce using rule 72
	'\''           reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'@'            reduce using rule 72
	'False'        reduce using rule 72
	'True'         reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 73

	Expr1 -> Expr2 '&&' . Expr1                         (rule 55)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 102

State 74

	RelOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'#'            reduce using rule 67
	'$'            reduce using rule 67
	'\''           reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'@'            reduce using rule 67
	'False'        reduce using rule 67
	'True'         reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 75

	RelOp -> '<=' .                                     (rule 68)

	'!'            reduce using rule 68
	'#'            reduce using rule 68
	'$'            reduce using rule 68
	'\''           reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'@'            reduce using rule 68
	'False'        reduce using rule 68
	'True'         reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 76

	RelOp -> '==' .                                     (rule 71)

	'!'            reduce using rule 71
	'#'            reduce using rule 71
	'$'            reduce using rule 71
	'\''           reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'@'            reduce using rule 71
	'False'        reduce using rule 71
	'True'         reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 77

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'#'            reduce using rule 69
	'$'            reduce using rule 69
	'\''           reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'@'            reduce using rule 69
	'False'        reduce using rule 69
	'True'         reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 78

	RelOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'#'            reduce using rule 70
	'$'            reduce using rule 70
	'\''           reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'@'            reduce using rule 70
	'False'        reduce using rule 70
	'True'         reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 79

	Expr3 -> Expr3 AddOp . Expr4                        (rule 51)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 101

State 80

	AddOp -> '+' .                                      (rule 62)

	'!'            reduce using rule 62
	'#'            reduce using rule 62
	'$'            reduce using rule 62
	'\''           reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'@'            reduce using rule 62
	'False'        reduce using rule 62
	'True'         reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 81

	AddOp -> '-' .                                      (rule 63)

	'!'            reduce using rule 63
	'#'            reduce using rule 63
	'$'            reduce using rule 63
	'\''           reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'@'            reduce using rule 63
	'False'        reduce using rule 63
	'True'         reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 82

	Expr4 -> Expr4 MulOp . Expr5                        (rule 49)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 100

State 83

	MulOp -> '%' .                                      (rule 66)

	'!'            reduce using rule 66
	'#'            reduce using rule 66
	'$'            reduce using rule 66
	'\''           reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'@'            reduce using rule 66
	'False'        reduce using rule 66
	'True'         reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 84

	MulOp -> '*' .                                      (rule 64)

	'!'            reduce using rule 64
	'#'            reduce using rule 64
	'$'            reduce using rule 64
	'\''           reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'@'            reduce using rule 64
	'False'        reduce using rule 64
	'True'         reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 85

	MulOp -> '/' .                                      (rule 65)

	'!'            reduce using rule 65
	'#'            reduce using rule 65
	'$'            reduce using rule 65
	'\''           reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'@'            reduce using rule 65
	'False'        reduce using rule 65
	'True'         reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 86

	Stmt -> Type Ident . '=' Expr ';'                   (rule 21)
	Stmt -> Type Ident . '++' ';'                       (rule 22)
	Stmt -> Type Ident . '--' ';'                       (rule 23)
	Expr6 -> Type Ident .                               (rule 39)
	Expr6 -> Type Ident . '(' ListExpr ')'              (rule 43)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 96
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           shift, and enter state 97
	'-'            reduce using rule 39
	'--'           shift, and enter state 98
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            shift, and enter state 99
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 87

	ListStmt -> Stmt ListStmt .                         (rule 18)

	'else'         reduce using rule 18
	'endif'        reduce using rule 18
	'endwhile'     reduce using rule 18
	'}'            reduce using rule 18


State 88

	Prog -> ListTopDefVar ListTopDef 'Main' '{' Blok '}' .    (rule 4)

	%eof           reduce using rule 4


State 89

	Arg -> '&' Type . Ident                             (rule 12)

	L_Ident        shift, and enter state 2

	Ident          goto state 95

State 90

	Arg -> Type Ident .                                 (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 91

	TopDef -> Type Ident '(' ListArg ')' . '{' Blok '}'    (rule 8)

	'{'            shift, and enter state 94


State 92

	ListArg -> Arg ',' . ListArg                        (rule 15)

	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'&'            shift, and enter state 26
	'\''           shift, and enter state 13
	')'            reduce using rule 13
	'@'            shift, and enter state 14

	Arg            goto state 23
	ListArg        goto state 93
	Type           goto state 25

State 93

	ListArg -> Arg ',' ListArg .                        (rule 15)

	')'            reduce using rule 15


State 94

	TopDef -> Type Ident '(' ListArg ')' '{' . Blok '}'    (rule 8)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'create'       shift, and enter state 48
	'if'           shift, and enter state 49
	'print'        shift, and enter state 50
	'return'       shift, and enter state 51
	'while'        shift, and enter state 52
	'}'            reduce using rule 17
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Blok           goto state 121
	ListStmt       goto state 30
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 95

	Arg -> '&' Type Ident .                             (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 96

	Expr6 -> Type Ident '(' . ListExpr ')'              (rule 43)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	')'            reduce using rule 59
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 119
	ListExpr       goto state 120

State 97

	Stmt -> Type Ident '++' . ';'                       (rule 22)

	';'            shift, and enter state 118


State 98

	Stmt -> Type Ident '--' . ';'                       (rule 23)

	';'            shift, and enter state 117


State 99

	Stmt -> Type Ident '=' . Expr ';'                   (rule 21)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 116

State 100

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'then'         reduce using rule 49
	'||'           reduce using rule 49


State 101

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 83
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 84
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 85
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'then'         reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 82

State 102

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'then'         reduce using rule 55
	'||'           reduce using rule 55


State 103

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 80
	','            reduce using rule 53
	'-'            shift, and enter state 81
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'then'         reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 79

State 104

	Expr -> Expr1 '||' Expr .                           (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'then'         reduce using rule 57


State 105

	Expr6 -> '(' Expr ')' .                             (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'then'         reduce using rule 45
	'||'           reduce using rule 45


State 106

	Stmt -> 'create' '(' Type . Ident ')' ';'           (rule 20)

	L_Ident        shift, and enter state 2

	Ident          goto state 115

State 107

	Stmt -> 'if' Expr 'then' . ListStmt 'endif'         (rule 26)
	Stmt -> 'if' Expr 'then' . ListStmt 'else' ListStmt 'endif'    (rule 27)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'create'       shift, and enter state 48
	'else'         reduce using rule 17
	'endif'        reduce using rule 17
	'if'           shift, and enter state 49
	'print'        shift, and enter state 50
	'return'       shift, and enter state 51
	'while'        shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 114
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 108

	Stmt -> 'print' '(' Expr . ')' ';'                  (rule 32)

	')'            shift, and enter state 113


State 109

	Stmt -> 'return' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'#'            reduce using rule 24
	'$'            reduce using rule 24
	'\''           reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'@'            reduce using rule 24
	'False'        reduce using rule 24
	'True'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'create'       reduce using rule 24
	'else'         reduce using rule 24
	'endif'        reduce using rule 24
	'endwhile'     reduce using rule 24
	'if'           reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'while'        reduce using rule 24
	'}'            reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 110

	Stmt -> 'while' Expr 'then' . ListStmt 'endwhile'    (rule 28)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'create'       shift, and enter state 48
	'endwhile'     reduce using rule 17
	'if'           shift, and enter state 49
	'print'        shift, and enter state 50
	'return'       shift, and enter state 51
	'while'        shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 112
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 111

	Expr6 -> Type Ident .                               (rule 39)
	Expr6 -> Type Ident . '(' ListExpr ')'              (rule 43)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 96
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'then'         reduce using rule 39
	'||'           reduce using rule 39


State 112

	Stmt -> 'while' Expr 'then' ListStmt . 'endwhile'    (rule 28)

	'endwhile'     shift, and enter state 130


State 113

	Stmt -> 'print' '(' Expr ')' . ';'                  (rule 32)

	';'            shift, and enter state 129


State 114

	Stmt -> 'if' Expr 'then' ListStmt . 'endif'         (rule 26)
	Stmt -> 'if' Expr 'then' ListStmt . 'else' ListStmt 'endif'    (rule 27)

	'else'         shift, and enter state 127
	'endif'        shift, and enter state 128


State 115

	Stmt -> 'create' '(' Type Ident . ')' ';'           (rule 20)

	')'            shift, and enter state 126


State 116

	Stmt -> Type Ident '=' Expr . ';'                   (rule 21)

	';'            shift, and enter state 125


State 117

	Stmt -> Type Ident '--' ';' .                       (rule 23)

	'!'            reduce using rule 23
	'#'            reduce using rule 23
	'$'            reduce using rule 23
	'\''           reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'@'            reduce using rule 23
	'False'        reduce using rule 23
	'True'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'create'       reduce using rule 23
	'else'         reduce using rule 23
	'endif'        reduce using rule 23
	'endwhile'     reduce using rule 23
	'if'           reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'while'        reduce using rule 23
	'}'            reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 118

	Stmt -> Type Ident '++' ';' .                       (rule 22)

	'!'            reduce using rule 22
	'#'            reduce using rule 22
	'$'            reduce using rule 22
	'\''           reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'@'            reduce using rule 22
	'False'        reduce using rule 22
	'True'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'create'       reduce using rule 22
	'else'         reduce using rule 22
	'endif'        reduce using rule 22
	'endwhile'     reduce using rule 22
	'if'           reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'while'        reduce using rule 22
	'}'            reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 119

	ListExpr -> Expr .                                  (rule 60)
	ListExpr -> Expr . ',' ListExpr                     (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 124


State 120

	Expr6 -> Type Ident '(' ListExpr . ')'              (rule 43)

	')'            shift, and enter state 123


State 121

	TopDef -> Type Ident '(' ListArg ')' '{' Blok . '}'    (rule 8)

	'}'            shift, and enter state 122


State 122

	TopDef -> Type Ident '(' ListArg ')' '{' Blok '}' .    (rule 8)

	'#'            reduce using rule 8
	'$'            reduce using rule 8
	'\''           reduce using rule 8
	'@'            reduce using rule 8
	'Main'         reduce using rule 8


State 123

	Expr6 -> Type Ident '(' ListExpr ')' .              (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'then'         reduce using rule 43
	'||'           reduce using rule 43


State 124

	ListExpr -> Expr ',' . ListExpr                     (rule 61)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	')'            reduce using rule 59
	'-'            shift, and enter state 42
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	Type           goto state 57
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 119
	ListExpr       goto state 133

State 125

	Stmt -> Type Ident '=' Expr ';' .                   (rule 21)

	'!'            reduce using rule 21
	'#'            reduce using rule 21
	'$'            reduce using rule 21
	'\''           reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'@'            reduce using rule 21
	'False'        reduce using rule 21
	'True'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'create'       reduce using rule 21
	'else'         reduce using rule 21
	'endif'        reduce using rule 21
	'endwhile'     reduce using rule 21
	'if'           reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'while'        reduce using rule 21
	'}'            reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 126

	Stmt -> 'create' '(' Type Ident ')' . ';'           (rule 20)

	';'            shift, and enter state 132


State 127

	Stmt -> 'if' Expr 'then' ListStmt 'else' . ListStmt 'endif'    (rule 27)

	'!'            shift, and enter state 40
	'#'            shift, and enter state 11
	'$'            shift, and enter state 12
	'\''           shift, and enter state 13
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'@'            shift, and enter state 14
	'False'        shift, and enter state 44
	'True'         shift, and enter state 45
	'break'        shift, and enter state 46
	'continue'     shift, and enter state 47
	'create'       shift, and enter state 48
	'endif'        reduce using rule 17
	'if'           shift, and enter state 49
	'print'        shift, and enter state 50
	'return'       shift, and enter state 51
	'while'        shift, and enter state 52
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Integer        goto state 27
	String         goto state 28
	ListStmt       goto state 131
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 128

	Stmt -> 'if' Expr 'then' ListStmt 'endif' .         (rule 26)

	'!'            reduce using rule 26
	'#'            reduce using rule 26
	'$'            reduce using rule 26
	'\''           reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'@'            reduce using rule 26
	'False'        reduce using rule 26
	'True'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'create'       reduce using rule 26
	'else'         reduce using rule 26
	'endif'        reduce using rule 26
	'endwhile'     reduce using rule 26
	'if'           reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'while'        reduce using rule 26
	'}'            reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 129

	Stmt -> 'print' '(' Expr ')' ';' .                  (rule 32)

	'!'            reduce using rule 32
	'#'            reduce using rule 32
	'$'            reduce using rule 32
	'\''           reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'@'            reduce using rule 32
	'False'        reduce using rule 32
	'True'         reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'create'       reduce using rule 32
	'else'         reduce using rule 32
	'endif'        reduce using rule 32
	'endwhile'     reduce using rule 32
	'if'           reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	'while'        reduce using rule 32
	'}'            reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 130

	Stmt -> 'while' Expr 'then' ListStmt 'endwhile' .    (rule 28)

	'!'            reduce using rule 28
	'#'            reduce using rule 28
	'$'            reduce using rule 28
	'\''           reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'@'            reduce using rule 28
	'False'        reduce using rule 28
	'True'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'create'       reduce using rule 28
	'else'         reduce using rule 28
	'endif'        reduce using rule 28
	'endwhile'     reduce using rule 28
	'if'           reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'while'        reduce using rule 28
	'}'            reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 131

	Stmt -> 'if' Expr 'then' ListStmt 'else' ListStmt . 'endif'    (rule 27)

	'endif'        shift, and enter state 134


State 132

	Stmt -> 'create' '(' Type Ident ')' ';' .           (rule 20)

	'!'            reduce using rule 20
	'#'            reduce using rule 20
	'$'            reduce using rule 20
	'\''           reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'@'            reduce using rule 20
	'False'        reduce using rule 20
	'True'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'create'       reduce using rule 20
	'else'         reduce using rule 20
	'endif'        reduce using rule 20
	'endwhile'     reduce using rule 20
	'if'           reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'while'        reduce using rule 20
	'}'            reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 133

	ListExpr -> Expr ',' ListExpr .                     (rule 61)

	')'            reduce using rule 61


State 134

	Stmt -> 'if' Expr 'then' ListStmt 'else' ListStmt 'endif' .    (rule 27)

	'!'            reduce using rule 27
	'#'            reduce using rule 27
	'$'            reduce using rule 27
	'\''           reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'@'            reduce using rule 27
	'False'        reduce using rule 27
	'True'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'create'       reduce using rule 27
	'else'         reduce using rule 27
	'endif'        reduce using rule 27
	'endwhile'     reduce using rule 27
	'if'           reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'while'        reduce using rule 27
	'}'            reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 45
Number of non-terminals: 27
Number of states: 135
